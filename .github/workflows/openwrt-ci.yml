#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: OpenWrt-编译

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 20 * * *
  watch:
    types: [started]


jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@master
      with:
        ref: master
        fetch-depth: 1000000
    - name: 安装环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        df -h
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

          df -h
    - name: 下载feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 生成配置
      # env:
      #   CONFIG_FILE: '.config'
      #   DIY_SH: 'diy.sh'
      run: |
        # [ -e files ] && mv files lede/files
        # [ -e $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config
        # chmod +x $DIY_SH
        # ../$DIY_SH
        make defconfig

    - name: 下载dl软件
      run: |
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 固件编译
      run: |
        echo -e "$(nproc) thread compile"
        make -j$(nproc)
        
    - name: 错误检查
      if: failure()
      run: |
        make -j1 V=s 

    - name: bin目录打包
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: OpenWrt_bin
        path: bin

    - name: 固件打包
      if: always()
      run: |
        cd bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"

    - name: 上传固件
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: OpenWrt-firmware
        path: ${{ env.FIRMWARE }}
